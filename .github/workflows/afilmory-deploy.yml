name: Deploy Afilmory Photos

on:
  push:
    branches: [main]
    paths: ['afilmory/**']
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout config repo
        uses: actions/checkout@v4
        with:
          path: config-repo

      - name: Checkout Afilmory source
        uses: actions/checkout@v4
        with:
          repository: Afilmory/afilmory
          path: afilmory-source

      - name: Copy configuration files
        env:
          ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
        run: |
          echo "Copying configuration files..."
          cp config-repo/afilmory/builder.config.json afilmory-source/
          cp config-repo/afilmory/config.json afilmory-source/
          cp config-repo/afilmory/apps/web/wrangler.jsonc afilmory-source/apps/web/
          cp config-repo/afilmory/apps/web/vercel.json afilmory-source/apps/web/

          echo "Substituting environment variables..."
          sed -i "s/\${ACCESS_KEY_ID}/$ACCESS_KEY_ID/g" afilmory-source/builder.config.json
          sed -i "s/\${SECRET_ACCESS_KEY}/$SECRET_ACCESS_KEY/g" afilmory-source/builder.config.json

          echo "Configuration applied:"
          cat afilmory-source/builder.config.json

          echo "Applied configuration successfully"

      - name: Skip CORS configuration
        run: |
          echo "Note: CORS should be configured manually in Cloudflare Dashboard"
          echo "Please follow the instructions in afilmory/TROUBLESHOOTING.md"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: afilmory-source
        run: pnpm install

      - name: Build photos manifest
        working-directory: afilmory-source
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          echo "Building photos manifest from R2..."
          pnpm run build:manifest

      - name: Build web application
        working-directory: afilmory-source
        run: |
          echo "Building web application..."
          cd apps/web
          pnpm vite build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: afilmory-source/apps/web/dist
          wranglerVersion: '3'
